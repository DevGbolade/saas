// This is your Prisma schema file,
// learn more about it in the docs https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Business {
  id              String           @id @default(uuid())
  name            String
  owner           User             @relation(fields: [ownerId], references: [id])
  ownerId         String
  departmentHeads DepartmentHead[]
  orders          Order[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @default(now()) @updatedAt
}

model User {
  id         String     @id @default(uuid())
  username   String?    @unique
  email      String     @unique
  password   String
  businesses Business[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now()) @updatedAt
}

model DepartmentHead {
  id         String   @id @default(uuid())
  name       String
  business   Business @relation(fields: [businessId], references: [id])
  businessId String
  orders     Order[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
}

model Order {
  id               String         @id @default(uuid())
  amount           Int
  status           OrderStatus    @default(PENDING)
  departmentHead   DepartmentHead @relation(fields: [departmentHeadId], references: [id])
  departmentHeadId String
  transactions     Transaction[]
  Business         Business?      @relation(fields: [businessId], references: [id])
  businessId       String?
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now()) @updatedAt
}

model Transaction {
  id         String   @id @default(uuid())
  businessId String
  amount     Int
  date       DateTime
  status     String
  order      Order    @relation(fields: [orderId], references: [id])
  orderId    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
}

enum OrderStatus {
  PENDING
  PROCESSING
  COMPLETED
  CANCELED
}
